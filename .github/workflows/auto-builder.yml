name: Auto Builder CI

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0" # L1 image

jobs:
  latest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set Enviroment Variables
        id: variables
        env:
          DOCKERHUB_USER: vcxpz
          DOCKERHUB_IMAGE: baseimage-ubuntu
          DOCKERIMAGE_TAG: latest
          UBUNTU_VERSION: groovy
        run: |
          echo "DOCKERHUB_IMAGE=${DOCKERHUB_IMAGE}" >>$GITHUB_ENV
          echo "DOCKERHUB_USER=${DOCKERHUB_USER}" >>$GITHUB_ENV
          echo "DOCKERIMAGE_TAG=${DOCKERIMAGE_TAG}" >>$GITHUB_ENV
          echo "UBUNTU_VERSION=${UBUNTU_VERSION}" >>$GITHUB_ENV
          echo "OVERLAY_VERSION=$(curl -sX GET "https://api.github.com/repos/just-containers/s6-overlay/releases/latest" | jq -r .tag_name | cut -c 2-)" >>$GITHUB_ENV
          echo "::set-output name=USER_IMAGE::${DOCKERHUB_USER}/${DOCKERHUB_IMAGE}"

      - name: Docker Login
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo ${DOCKER_PASSWORD} | docker login -u ${DOCKERHUB_USER} --password-stdin

      - name: Github Login
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

      - name: Build The Docker Image
        run: |
          docker build --no-cache --pull . --file Dockerfile --build-arg UBUNTU_VERSION=${UBUNTU_VERSION} --build-arg OVERLAY_VERSION=${OVERLAY_VERSION} --tag ${DOCKERHUB_USER}/${DOCKERHUB_IMAGE}:cibuild

      - name: Test The Docker Image
        run: |
          export RUN_ARGS=""
          curl -sSL https://raw.githubusercontent.com/hydazz/scripts/main/docker/docker-ci.sh | bash

      - name: Get New Package Versions From Image
        run: |
          docker run --rm --entrypoint '/bin/sh' -v "$PWD":/tmp ${DOCKERHUB_USER}/${DOCKERHUB_IMAGE}:cibuild -c '\
            apt list -qq --installed | sed "s#/.*now ##g" | cut -d" " -f1 | sort >/tmp/package_versions.txt'

      - name: Update README
        run: |
          chmod +x update_version_info.sh && ./update_version_info.sh

      - name: Commit And Push Changes To Github
        run: |
          git add -A
          git commit -m 'Bot Updating Files' || echo "No Changes"
          git push || echo "No Changes"

      - name: Tag And Push Docker Image
        run: |
          docker tag ${DOCKERHUB_USER}/${DOCKERHUB_IMAGE}:cibuild ${DOCKERHUB_USER}/${DOCKERHUB_IMAGE}:${UBUNTU_VERSION}
          docker push ${DOCKERHUB_USER}/${DOCKERHUB_IMAGE}:${UBUNTU_VERSION}
